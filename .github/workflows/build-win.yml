# This workflow will install Python dependencies and package the application with Nuitka

name: Build Python application in Windows

on:
  workflow_dispatch:
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: ["3.11", "3.12"]
    
    runs-on: ${{ matrix.os }}

    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip cache purge
        pip install -r requirements.txt
    
    # Build python script into a stand-alone exe
    - name: Build standalone with Nuitka
      uses: Nuitka/Nuitka-Action@main
      with:
        nuitka-version: main
        script-name: ufocus/main.py
        mode: standalone
        enable-plugins: pyside6
        user-package-configuration-file: pypylon.yml
        windows-icon-from-ico: icons/icon3_256.png
        noinclude-qt-translations: true

    # Get latest tag if missing
    - name: Get latest tag if missing
      shell: bash
      run: |
        if [ -z "${{ github.event.release.tag_name }}" ]; then
          git fetch --tags
          echo "VERSION=$(git tag --sort=-creatordate | head -n 1)" >> $GITHUB_ENV
        else
          echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
        fi

    # Rename executable file
    - name: Rename executable
      run: |
        mv build/main.dist/main.exe build/main.dist/uFocus-${{ env.VERSION }}.exe
    
    # Upload standalone artifacts
    - name: Upload standalone
      uses: actions/upload-artifact@v4
      with:
        name: ufocus-standalone-${{ env.VERSION }}-${{ matrix.os }}-py${{ matrix.python-version }}
        path: build/main.dist/
    
    # Compile Inno Setup installer
    - name: Create Installer with Inno Setup
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.5
      with:
        path: installer.iss
      env:
        VERSION: ${{ env.VERSION }}
    
    # Rename installer
    - name: Rename installer
      run: |
        mv build/uFocus-setup-win64.exe build/uFocus-${{ env.VERSION }}-setup-py${{ matrix.python-version }}-win64.exe
    
    # Uploads artifact
    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: ufocus-installer-${{ env.VERSION }}-${{ matrix.os }}-py${{ matrix.python-version }}
        path: build/*.exe
